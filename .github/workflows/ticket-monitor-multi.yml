name: Multi-Approach Ticket Monitor

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      approach:
        description: 'Which approach to use'
        required: false
        type: choice
        options:
          - all
          - enhanced
          - cloudscraper
          - selenium
        default: all

jobs:
  check-tickets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Chrome for Selenium
      if: ${{ inputs.approach == 'selenium' || inputs.approach == 'all' || inputs.approach == '' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser chromium-chromedriver
        sudo ln -s /usr/bin/chromium-browser /usr/bin/google-chrome
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Enhanced Monitor
      if: ${{ inputs.approach == 'enhanced' || inputs.approach == 'all' || inputs.approach == '' }}
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_USER: ${{ secrets.EMAIL_FROM }}
      run: |
        echo "üé¨ Running Enhanced Monitor..."
        python bookmyshow_monitor_enhanced.py --once || true
      continue-on-error: true
    
    - name: Run CloudScraper Monitor
      if: ${{ inputs.approach == 'cloudscraper' || inputs.approach == 'all' || inputs.approach == '' }}
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_USER: ${{ secrets.EMAIL_FROM }}
      run: |
        echo "‚òÅÔ∏è Running CloudScraper Monitor..."
        python bookmyshow_cloudscraper.py || true
      continue-on-error: true
    
    - name: Run Selenium Monitor
      if: ${{ inputs.approach == 'selenium' || inputs.approach == 'all' || inputs.approach == '' }}
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_USER: ${{ secrets.EMAIL_FROM }}
        GITHUB_ACTIONS: true
      run: |
        echo "üåê Running Selenium Monitor..."
        python bookmyshow_selenium.py || true
      continue-on-error: true
    
    - name: Summary
      if: always()
      run: |
        echo "‚úÖ Monitoring completed"
        echo "Multiple approaches were attempted to bypass anti-bot protection"
        echo "Check your email for any alerts"